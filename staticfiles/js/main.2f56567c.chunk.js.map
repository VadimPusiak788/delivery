{"version":3,"sources":["store/reducers/testReducer.js","store/reducers/loginReducer.js","store/reducers/userReducer.js","store/reducers/performersReducer.js","store/reducers/rootReducer.js","store/store.js","common/auth.js","common/url.js","common/axios.js","pages/login/Login.js","pages/registration/components/layout.js","pages/registration/components/CustomerFrom.js","pages/registration/components/PerformerForm.js","pages/registration/Registration.js","pages/map/components/SearchGroup.js","common/AvatarGroup.js","pages/map/components/Products.js","pages/map/components/Suppliers.js","pages/map/Main.js","pages/cabinet/components/CabinetLayout.js","pages/cabinet/components/MyOrdersList.js","pages/cabinet/components/Cart.js","pages/cabinet/components/CustomerSettings.js","pages/cabinet/CustomerCabinet.js","pages/cabinet/components/ListOfDeals.js","pages/cabinet/PerformerCabinet.js","pages/cabinet/ProxyCabinet.js","pages/registration/components/license.js","App.js","index.js"],"names":["testReducer","state","action","type","initialState","login","localStorage","getItem","loginReducer","payload","userReducer","JSON","parse","avatar","data","loading","hasErrors","performersReducer","rootReducer","combineReducers","test","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PrivateRoute","Component","component","rest","useSelector","render","props","to","whichRole","customer","courier","url","axiosInstance","axios","create","baseURL","headers","Login","history","useHistory","dispatch","useDispatch","className","justify","span","title","style","width","name","initialValues","remember","onFinish","values","post","username","password","then","response","defaults","key","setItem","push","catch","err","message","error","detail","console","log","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","Option","Select","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","offset","CustomerFrom","Form","useForm","form","password1","password2","city","street","res","success","keys","Object","errors","forEach","map","item","color","scrollToFirstError","label","tooltip","whitespace","hasFeedback","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","PerformerForm","TabPane","Tabs","Registration","defaultActiveKey","tab","Input","Search","AvatarGroup","menu","onClick","e","preventDefault","size","icon","src","WalletOutlined","Divider","ExportOutlined","removeItem","marginTop","marginRight","overlay","trigger","Products","params","useState","products","setProducts","id","useParams","useEffect","get","grid","gutter","column","footer","bordered","dataSource","renderItem","actions","status","handleOrder","Meta","description","price","Suppliers","suppliers","setSuppliers","exact","path","justifyContent","location","Main","stringify","Header","Layout","Content","Footer","Sider","CustomerCabinet","match","menuItems","switchRoutes","collapsed","setCollapsed","minHeight","collapsible","theme","onCollapse","selectable","defaultSelectedKeys","mode","padding","col","margin","textAlign","MyOrdersList","order","orderitem","setData","itemLayout","pagination","onChange","page","pageSize","idx","moment","date_create","format","ell","product","quantity","total","Cart","cartData","setCartData","isPrice","price_total","handlerender","display","danger","delete","ShoppingCartOutlined","FieldTimeOutlined","RollbackOutlined","CabinetLayout","Text","Typography","ListOfDeals","Link","columns","dataIndex","record","text","patch","PerformerCabinet","DollarCircleOutlined","OrderedListOutlined","ProxyCabinet","License","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2f56567c.chunk.js","sourcesContent":["const testReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default testReducer;\r\n","const initialState = { login: localStorage.getItem(\"isLogged\") === 'true' ? true : false }\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_LOGIN':\r\n            return { ...state, login: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loginReducer;","export const userReducer = (state = JSON.parse(localStorage.getItem('user') === null ? '{}' : localStorage.getItem('user')), action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, ...action.payload }\r\n        case 'SET_AVATAR':\r\n            return { ...state, avatar: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","let initialState = {\r\n    data: [],\r\n    loading: false,\r\n    hasErrors: false,\r\n};\r\n\r\nconst performersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_PERFORMERS_DATA\":\r\n            return { ...state, loading: true };\r\n        case \"GET_PERFORMERS_DATA_SUCCESS\":\r\n            return { data: action.payload, loading: false, hasErrors: false };\r\n        case \"GET_PERFORMERS_DATA_FAILURE\":\r\n            return { ...state, loading: false, hasErrors: true };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default performersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport testReducer from \"./testReducer\";\r\nimport loginReducer from './loginReducer'\r\nimport userReducer from \"./userReducer\";\r\nimport performersReducer from './performersReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  //here would be reducers\r\n  test: testReducer,\r\n  loginReducer: loginReducer,\r\n  userReducer: userReducer,\r\n  performersReducer: performersReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\nexport default store;\r\n","import { Route, Redirect } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport rootReducer from \"../store/reducers/rootReducer\";\r\nimport store from './../store/store'\r\n\r\nexport function PrivateRoute({ component: Component, ...rest }) {\r\n  const { login } = useSelector((state) => state.loginReducer);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return login ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nexport function whichRole(customer, courier) {\r\n  return customer ? \"Customer\" : \"Courier\";\r\n}\r\n","export const url = \"http://localhost:8000\"","import axios from \"axios\";\r\nimport store from './../store/store'\r\nimport { url } from './url'\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: `${url}/api/`, \r\n    headers: {\r\n        'Authorization': \"Token \" + localStorage.getItem('key'),\r\n        'Content-Type': 'application/json',\r\n        'accept': 'application/json'\r\n    }\r\n});\r\n\r\n\r\nexport default axiosInstance;","import { React } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Card, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport \"./css/index.css\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport axiosInstance from './../../common/axios'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { url } from './../../common/url'\r\n\r\nconst Login = () => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    axios.post(`${url}/api/login/`, { //TODO: before prod change this link\r\n      username: values.username,\r\n      // email: values.email,\r\n      password: values.password\r\n    }).then(response => {\r\n      axiosInstance.defaults.headers['Authorization'] = \"Token \" + response.data.key;\r\n      localStorage.setItem('key', response.data.key);\r\n      localStorage.setItem(\"isLogged\", true)\r\n      dispatch({ type: \"SET_LOGIN\", payload: true })\r\n      history.push(\"/\");\r\n    }).catch(err => {\r\n      message.error(err.response.data.detail)\r\n      console.log(err.response.data)\r\n    });\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <Row className=\"login-row\" justify={\"space-between\"}>\r\n      <Col className=\"image-background\" span={14}>\r\n      </Col>\r\n      <Col className=\"login-col\" span={10}>\r\n        <Card title=\"Welcome back !\" style={{ width: \"35rem\" }}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your Username!\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Username\"\r\n              />\r\n            </Form.Item>\r\n{/* \r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                { required: true, message: \"Please input your Email!\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your Password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                Log in\r\n              </Button>\r\n              <Link to=\"/registration\">&nbsp;Or register now</Link>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Form, Select } from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nexport const formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\n\r\nexport const tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nexport const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n        <Select\r\n            style={{\r\n                width: 70,\r\n            }}\r\n        >\r\n            <Option value=\"38\">+38</Option>\r\n        </Select>\r\n    </Form.Item>\r\n);","import { Form, Input, Card, Select, Row, Col, Checkbox, Button, Radio, message } from \"antd\";\r\nimport axiosInstance from \"../../../common/axios\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { formItemLayout, tailFormItemLayout, prefixSelector } from './layout'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomerFrom = () => {\r\n    const [form] = Form.useForm();\r\n    const history = useHistory()\r\n\r\n    const onFinish = (values) => {\r\n        axiosInstance.post('users/registration/customer/', {\r\n            username: values.username,\r\n            password1: values.password,\r\n            password2: values.password,\r\n            city: values.city,\r\n            street: values.street,\r\n        }).then(res => {\r\n            message.success(\"User created, please login\")\r\n            history.push('/login')\r\n        }).catch(err => {\r\n            var keys = Object.keys(err.response.data);\r\n            const errors = []\r\n            keys.forEach(function (key) {\r\n                errors.push(err.response.data[key])\r\n            });\r\n            message.error(errors.map(item => <span style={{ color: 'red' }}>{item[0]}<br /></span>))\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                prefix: \"38\",\r\n            }}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                tooltip=\"What do you want others to call you?\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your nickname!\",\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your password!\",\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={[\"password\"]}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue(\"password\") === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject(\r\n                                new Error(\r\n                                    \"The two passwords that you entered do not match!\"\r\n                                )\r\n                            );\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"city\"\r\n                label=\"City\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your city!\",\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"street\"\r\n                label=\"Street\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your street!\",\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Register\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CustomerFrom;","import { Form, Input, InputNumber, Checkbox, Button, Select, message } from \"antd\";\r\nimport axiosInstance from \"../../../common/axios\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { formItemLayout, tailFormItemLayout, prefixSelector } from './layout'\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst PerformerForm = (props) => {\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0\r\n    };\r\n    const [form] = Form.useForm();\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    const onFinish = (values) => {\r\n\r\n        axiosInstance.post('users/registration/courier/', {\r\n            username: values.username,\r\n            password1: values.password,\r\n            password2: values.password,\r\n            city: values.city,\r\n            street: values.street,\r\n        }).then(res => {\r\n            message.success(\"User created, please login\")\r\n            history.push('/login')\r\n        }).catch(err => {\r\n            var keys = Object.keys(err.response.data);\r\n            const errors = []\r\n            keys.forEach(function (key) {\r\n                errors.push(err.response.data[key])\r\n            });\r\n            message.error(errors.map(item => <span style={{ color: 'red' }}>{item[0]}<br /></span>))\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                prefix: \"38\",\r\n            }}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                tooltip=\"What do you want others to call you?\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your nickname!\",\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your password!\",\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={[\"password\"]}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue(\"password\") === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject(\r\n                                new Error(\r\n                                    \"The two passwords that you entered do not match!\"\r\n                                )\r\n                            );\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                name=\"city\"\r\n                label=\"City\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your city!\",\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"street\"\r\n                label=\"Street\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your street!\",\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Register\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PerformerForm;","import { React, useState } from \"react\";\r\nimport { Card, Row, Col, Tabs } from \"antd\";\r\nimport \"./css/registration.css\";\r\nimport CustomerFrom from './components/CustomerFrom'\r\nimport PerformerForm from './components/PerformerForm'\r\nimport axiosInstance from \"../../common/axios\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Registration = () => {\r\n  return (\r\n    <Row className=\"login-row\" justify={\"space-between\"}>\r\n      <Col className=\"image-background\" span={14}>\r\n      </Col>\r\n      <Col className=\"login-col\" span={10}>\r\n        <Card title=\"Sign up\" style={{ width: \"35rem\" }}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab=\"Customer\" key=\"1\">\r\n              <CustomerFrom />\r\n            </TabPane>\r\n            <TabPane tab=\"Courier\" key=\"2\" >\r\n              <PerformerForm />\r\n            </TabPane>\r\n          </Tabs>\r\n        </Card>\r\n      </Col >\r\n    </Row >\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import { useState } from \"react\";\r\nimport { Card, Input, Divider, Select, InputNumber, Form, Button, Slider } from \"antd\";\r\nimport \"./../css/searchgroup.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchData } from \"../../../common/fetchData\";\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst SearchGroup = () => {\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch()\r\n  const { loading } = useSelector((state) => state.performersReducer)\r\n  const onFinish = (values) => {\r\n    let str = ''\r\n    if (values.description !== undefined) {\r\n      str = `?search=${values.description}&min_price=${values.price[0]}&max_price=${values.price[1]}`\r\n    }\r\n    else {\r\n      str = `?min_price=${values.price[0]}&max_price=${values.price[1]}`\r\n    }\r\n    dispatch(\r\n      fetchData(`/users/performers${str}`, \"PERFORMERS\")\r\n    );\r\n  }\r\n  return (\r\n    <Card className=\"main-card-search\">\r\n      <h2>Profielp</h2>\r\n      <Form\r\n        form={form}\r\n        name=\"register\"\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          price: [1, 999]\r\n        }}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"description\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"price\"\r\n          label=\"Price range\"\r\n        >\r\n          <Slider range defaultValue={[1, 999]} min={0} max={1000} />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            Find\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SearchGroup;\r\n","import { Avatar, Menu, Dropdown } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport \"./css/avatargroup.css\";\r\nimport {\r\n  ExportOutlined,\r\n  WalletOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { whichRole } from \"./auth\";\r\nimport axiosInstance from \"./axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { url } from './url'\r\n\r\n\r\n\r\nconst AvatarGroup = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { customer, courier, avatar } = useSelector((state) => state.userReducer);\r\n\r\n\r\n  const handleLogout = () => {\r\n    axiosInstance.post('logout/').then(response => {\r\n      localStorage.removeItem('key');\r\n      axiosInstance.defaults.headers['Authorization'] = null;\r\n      localStorage.removeItem(\"isLogged\");\r\n      localStorage.removeItem(\"user\")\r\n      dispatch({ type: 'SET_USER', payload: {} })\r\n      dispatch({ type: \"SET_LOGIN\", payload: false })\r\n    }).catch(err => console.log(err));\r\n  }\r\n\r\n  const menu = (\r\n    <Menu className=\"avatar-group-dropdown-menu\">\r\n      <div className=\"avatar-group-dropdown-menu-avatar\">\r\n        <Avatar\r\n          onClick={(e) => e.preventDefault()}\r\n          size={64}\r\n          icon={<UserOutlined />}\r\n          src={\r\n            `${url}${avatar}`\r\n          }\r\n        />\r\n      </div>\r\n      <h4 className=\"avatar-group-h4\">{whichRole(customer, courier)}</h4>\r\n      <Menu.Item key=\"0\" icon={<WalletOutlined />}>\r\n        <Link to=\"/cabinet/my-data\">Cabinet</Link>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"2\" icon={<ExportOutlined />} onClick={handleLogout}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"main-avatar-div\"\r\n      style={{ marginTop: props.marginTop, marginRight: props.marginRight }}\r\n    >\r\n      <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n        <Avatar\r\n          onClick={(e) => e.preventDefault()}\r\n          size={props.size}\r\n          icon={<UserOutlined />}\r\n          src={\r\n            `${url}${avatar}`\r\n          }\r\n        />\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarGroup;\r\n","import { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../../common/axios\";\r\nimport { List, Button, message, Image } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Products = (params) => {\r\n    const [products, setProducts] = useState([])\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get(`order/supplier/detail/${id}/`).then(response => setProducts(response.data.products)).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const handleOrder = (id) => {\r\n        axiosInstance.post(`order/product/detail/${id}/`).then(response => { if (response.status === 200) { message.success('Added to cart') } })\r\n    }\r\n\r\n    return <List\r\n        size=\"large\"\r\n        grid={{ gutter: 10, column: 3 }}\r\n        footer={<div></div>}\r\n        bordered\r\n        dataSource={products}\r\n        renderItem={item => \r\n        <List.Item style={{marginTop: '5em' }} actions={[<Button type=\"primary\" style={{marginTop: '3em' }} onClick={() => { handleOrder(item.id) }}>Order</Button>]}>\r\n            <List.Item.Meta\r\n                title={item.name}\r\n                description={item.description}\r\n\r\n            />\r\n            <Image\r\n      width={200}\r\n      src=\"http://denrakaev.com/wp-content/uploads/2015/03/no-image-800x511.png\"\r\n      />\r\n            <p>{item.price} UAH</p>\r\n\r\n        </List.Item>}\r\n    />\r\n}\r\n\r\nexport default Products;","import { List, Card, Image, Avatar } from 'antd';\r\nimport { useState, useEffect } from 'react';\r\nimport axiosInstance from '../../../common/axios';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Products from './Products';\r\n\r\nconst Suppliers = () => {\r\n    const [suppliers, setSuppliers] = useState([])\r\n    useEffect(() => {\r\n        axiosInstance.get('order/list/supplier/').then(response => setSuppliers(response.data)).catch(err => console.log(err))\r\n    }, [])\r\n    console.log(suppliers)\r\n    return <Switch>\r\n        <Route exact path=\"/\" ><List\r\n        grid={{ gutter: 10, column: 3 }}\r\n        footer={<div></div>}\r\n            bordered\r\n            dataSource={suppliers}\r\n            renderItem={item => (\r\n             <List.Item style={{marginTop: '5em' }}>\r\n                <Card title={<Link to={`/supplier/${item.id}`}><div style={{justifyContent: \"center\" }}>{item.name}</div></Link>}>\r\n                <Image\r\n      width={200}\r\n      \r\n      src=\"http://denrakaev.com/wp-content/uploads/2015/03/no-image-800x511.png\"\r\n      />\r\n                 </Card>\r\n                 <p>City: {item.location.city}</p>\r\n                <p>Street: {item.location.street}</p>\r\n            </List.Item>\r\n            )}\r\n            \r\n        /></Route>\r\n        <Route path=\"/supplier/:id\" > <Products /></Route>\r\n    </Switch>\r\n\r\n\r\n}\r\n\r\nexport default Suppliers;","import SearchGroup from \"./components/SearchGroup\";\r\nimport AvatarGroup from \"./../../common/AvatarGroup\";\r\nimport { useEffect } from 'react'\r\nimport axiosInstance from \"../../common/axios\";\r\nimport userReducer from \"../../store/reducers/userReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Suppliers from './components/Suppliers'\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    axiosInstance.get(\"/users/me/\").then(response => {\r\n      dispatch({ type: \"SET_USER\", payload: response.data }); localStorage.setItem('user', JSON.stringify(response.data));\r\n    }).catch(err => console.log(err))\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <AvatarGroup marginTop=\"2rem\" marginRight=\"2rem\" size={64} />\r\n      <Suppliers />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useState } from \"react\";\r\nimport AvatarGroup from \"../../../common/AvatarGroup\";\r\nimport \"./../css/index.css\";\r\nimport { Layout, Menu, Row, Col } from \"antd\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst CustomerCabinet = ({ match, menuItems, switchRoutes }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Sider\r\n        collapsible\r\n        theme=\"light\"\r\n        collapsed={collapsed}\r\n        onCollapse={setCollapsed}\r\n        className=\"site-layout-background\"\r\n        selectable={false}\r\n      >\r\n        <div className=\"logo\">\r\n          &nbsp;\r\n        </div>\r\n        <Menu defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n          {menuItems}\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header className=\"cabinet-header\" style={{ padding: 0 }}>\r\n          <Row>\r\n            <Col col={12}></Col>\r\n            <Col col={12}>\r\n              <AvatarGroup marginRight=\"0.5rem\" size={45} />\r\n            </Col>\r\n          </Row>\r\n        </Header>\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Switch>{switchRoutes}</Switch>\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>&nbsp;</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CustomerCabinet;\r\n","import React from \"react\";\r\nimport { List, Avatar, Tag } from \"antd\";\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from \"@ant-design/icons\";\r\nimport axiosInstance from \"../../../common/axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst MyOrdersList = () => {\r\n  const [data, setData] = useState([{ order: { orderitem: [] } }])\r\n\r\n  useEffect(() => {\r\n    axiosInstance.get('users/profile-order/').then(response => setData(response.data)).catch(err => console.log(err))\r\n  }, [])\r\n  console.log(data)\r\n  return (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      pagination={{\r\n        onChange: (page) => {\r\n          console.log(page);\r\n        },\r\n        pageSize: 4,\r\n      }}\r\n      dataSource={data}\r\n      renderItem={(item, idx) => (\r\n        <List.Item\r\n          key={idx}\r\n        >\r\n          <List.Item.Meta\r\n            title={moment(item.date_create).format('MMMM Do YYYY, H:mm')}\r\n          />\r\n        \r\n          {item.order.orderitem.map(ell => <p>{ell.product} - {ell.quantity}</p>)}\r\n          <p>Total price {item.order.total}</p>\r\n          <br /><br />\r\n          <b>Status </b>:&nbsp;&nbsp;&nbsp;{item.status}\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default MyOrdersList;\r\n","import axiosInstance from \"../../../common/axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { List, Button, message } from 'antd';\r\n\r\nconst Cart = () => {\r\n    const [cartData, setCartData] = useState({ products: [] })\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get(\"order/customer/view_cart/\").then(response => setCartData(response.data)).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const handleOrder = () => {\r\n        axiosInstance.post(\"order/customer/view_cart/\").then(response => message.success(\"Ordered\")).catch(err => console.log(err))\r\n    }\r\n\r\n    const handleDecline = (pk) => {\r\n        axiosInstance.delete(\"order/customer/view_cart/\").then(response => message.success(\"Declined\")).catch(err => console.log(err))\r\n    }\r\n\r\n    const handleOrderRemove = (id) => {\r\n        axiosInstance.post(`order/customer/delete_order/${id}/`).then(response => { if (response.status === 200) { message.success('Remove product') } })\r\n    }\r\n    const handlerender = (isPrice) => {\r\n        if (isPrice){\r\n        return   <h3>Total price: {cartData.price_total} UAH</h3>;\r\n    }\r\n    }\r\n\r\n    console.log(cartData)\r\n    return <>\r\n        {handlerender(cartData.price_total)}\r\n        <List\r\n            size=\"large\"\r\n            bordered\r\n            dataSource={cartData.products}\r\n            renderItem={item =>\r\n            <List.Item actions={[<Button type=\"primary\" style={{marginTop: '3em' }} onClick={() => { handleOrderRemove(item.id) }}>Remove this order</Button>]}>\r\n                <div>\r\n                <p>{item.product}</p>\r\n                <p>Quantity: {item.quantity}</p>\r\n                </div>\r\n\r\n        </List.Item>}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'end', marginTop: '5rem' }}>\r\n            <Button type=\"primary\" style={{ marginRight: '2rem' }} onClick={() => handleOrder()}>Order</Button>\r\n            <Button type=\"primary\" danger onClick={() => handleDecline()}>Decline</Button>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Cart;","import { Form, Input, Image, Select, Row, Col, Button, message } from \"antd\";\r\nimport ImageUpload from \"./../../../common/ImageUpload\";\r\nimport { useState } from \"react\";\r\nimport ChangePasswordModal from \"./ChangePasswordModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axiosInstance from \"../../../common/axios\";\r\nimport { url } from \"../../../common/url\";\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst CustomerSettings = () => {\r\n  const data = useSelector((state) => state.userReducer)\r\n  const dispatch = useDispatch()\r\n\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const onFinish = (values) => {\r\n    axiosInstance.patch('/users/me', {\r\n      first_name: values.first_name,\r\n      last_name: values.last_name,\r\n      email: values.email,\r\n    })\r\n      .then(response => {\r\n        dispatch({ type: \"SET_USER\", payload: { ...response.data, role: data.role, username: data.username, on_site: data.on_site } });\r\n        localStorage.setItem('user', JSON.stringify({ ...response.data, role: data.role, username: data.username, on_site: data.on_site }));\r\n        message.success(\"Data is update\")\r\n      })\r\n      .catch(err => {\r\n        var keys = Object.keys(err.response.data);\r\n        const errors = []\r\n        keys.forEach(function (key) {\r\n          errors.push(err.response.data[key])\r\n        });\r\n        message.error(errors.map(item => <span style={{ color: 'red' }}>{item[0]}<br /></span>))\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <ChangePasswordModal visible={visible} setVisible={setVisible} />\r\n      <Row>\r\n        <h1>Settings</h1>\r\n      </Row>\r\n      <Row justify={\"space-around\"}>\r\n        <Col col={18}>\r\n          <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"settings\"\r\n            onFinish={onFinish}\r\n            initialValues={{ ...data, prefix: \"38\" }}\r\n            scrollToFirstError\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <Form.Item\r\n              name=\"first_name\"\r\n              label=\"First name\"\r\n              rules={[\r\n                {\r\n                  whitespace: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"last_name\"\r\n              label=\"Last name\"\r\n              rules={[\r\n                {\r\n                  whitespace: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"E-mail\"\r\n              rules={[\r\n                {\r\n                  type: \"email\",\r\n                  message: \"The input is not valid E-mail!\",\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your E-mail!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n\r\n            <Row justify={\"center\"}>\r\n              <Col col={12}>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                  <Button type=\"text\" htmlType=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col col={12}>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                  <Button type=\"link\" onClick={() => setVisible(true)}>\r\n                    Change password\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerSettings;\r\n","import { useState } from \"react\";\r\nimport \"./css/index.css\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport CabinetLayout from \"./components/CabinetLayout\";\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  LikeOutlined,\r\n  SendOutlined,\r\n  FileTextOutlined,\r\n  RollbackOutlined,\r\n  SettingOutlined,\r\n  FieldTimeOutlined,\r\n  ShoppingCartOutlined\r\n} from \"@ant-design/icons\";\r\nimport MyDataList from \"./components/MyDataList\";\r\nimport MyOrdersList from \"./components/MyOrdersList\";\r\nimport CustomerSettings from \"./components/CustomerSettings\";\r\nimport Cart from './components/Cart'\r\n\r\nconst CustomerCabinet = ({ match }) => {\r\n  const menuItems = (\r\n    <>\r\n      <Menu.Item key=\"2\" icon={<ShoppingCartOutlined />}>\r\n        <Link to={`${match.url}/cart`}>Cart</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"3\" icon={<FieldTimeOutlined />}>\r\n        <Link to={`${match.url}/history-orders`}>History orders</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"6\" icon={<RollbackOutlined />}>\r\n        <Link to=\"/\">Back to site</Link>\r\n      </Menu.Item>\r\n    </>\r\n  );\r\n\r\n  const switchRoutes = (\r\n    <>\r\n      <Route path={`${match.url}/cart`}>\r\n        <Cart />\r\n      </Route>\r\n      <Route path={`${match.url}/history-orders`}>\r\n        <MyOrdersList />\r\n      </Route>\r\n\r\n    </>\r\n  );\r\n  return (\r\n    <CabinetLayout\r\n      menuItems={menuItems}\r\n      match={match}\r\n      switchRoutes={switchRoutes}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomerCabinet;\r\n","import { Table, Tag, Space, Typography, message, Popconfirm } from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../../common/axios\";\r\nimport moment from \"moment\";\r\n\r\nconst { Text, Link } = Typography;\r\n\r\nconst ListOfDeals = () => {\r\n  const [statuses, setStatuses] = useState(null)\r\n  const [data, setData] = useState()\r\n  useEffect(() => {\r\n    axiosInstance.get('users/free_order/').then(response => setData(response.data)).catch(err => console.log(err))\r\n  }, [])\r\n\r\n  const handleDelete = (key) => {\r\n    const dataSource = [...data];\r\n    setData(dataSource.filter((item) => item.order_id !== key));\r\n  };\r\n  const handleAccept = (id) => {\r\n    axiosInstance.patch(`order/courier/change_order/${id}/`, { status: 'ACCEPT' }).then(response => {\r\n      message.success(\"Success accepted\");\r\n    }).catch(err => console.log(err))\r\n  };\r\n  const handleFinish = (id) => {\r\n    axiosInstance.patch(`order/courier/change_order/${id}/`, { status: 'FINISHED' }).then(response => {\r\n      message.success(\"Successfully finished\");\r\n    }).catch(err => console.log(err))\r\n\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: 'date_create',\r\n      render: (date_create, record) => {\r\n        return moment(date_create).format('MMMM Do YYYY, H:mm')\r\n      }\r\n    },\r\n    {\r\n      title: \"Order Items\",\r\n      dataIndex: \"order\",\r\n      render: (order, record) => {\r\n        return order.orderitem.map(item => <p>{item.product} - {item.quantity}</p>)\r\n      }\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (\r\n        text,\r\n        record\r\n      ) => (\r\n        <Space size=\"middle\">\r\n          {record.status == \"ACCEPT\" ?\r\n            <Text\r\n              type=\"danger\"\r\n              onClick={() => handleFinish(record.id)}\r\n              className=\"list-of-deals-accept-text\"\r\n            >\r\n              Finish\r\n            </Text> : <Text\r\n            type=\"success\"\r\n            onClick={() => handleAccept(record.id)}\r\n            className=\"list-of-deals-accept-text\"\r\n          >\r\n            Accept\r\n          </Text>\r\n          }\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return <Table columns={columns} dataSource={data} />;\r\n};\r\n\r\nexport default ListOfDeals;\r\n","import { useState } from \"react\";\r\nimport \"./css/index.css\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport CabinetLayout from \"./components/CabinetLayout\";\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  LikeOutlined,\r\n  DollarCircleOutlined,\r\n  FileTextOutlined,\r\n  RollbackOutlined,\r\n  FieldTimeOutlined,\r\n  OrderedListOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport MyDataList from \"./components/MyDataList\";\r\nimport MyOrdersList from \"./components/MyOrdersList\";\r\nimport ListOfDeals from \"./components/ListOfDeals\";\r\n\r\n\r\nconst PerformerCabinet = ({ match }) => {\r\n  const menuItems = (\r\n    <>\r\n      <Menu.Item key=\"2\" icon={<DollarCircleOutlined />}>\r\n        <Link to={`${match.url}/history-orders`}>History orders</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"4\" icon={<OrderedListOutlined />}>\r\n        <Link to={`${match.url}/list-of-deals`}>List of deals</Link>\r\n      </Menu.Item>\r\n    </>\r\n  );\r\n\r\n  const switchRoutes = (\r\n    <>\r\n\r\n      <Route path={`${match.url}/history-orders`}>\r\n        <MyOrdersList />\r\n      </Route>\r\n      <Route path={`${match.url}/list-of-deals`}>\r\n        <ListOfDeals />\r\n      </Route>\r\n    </>\r\n  );\r\n  return (\r\n    <CabinetLayout\r\n      menuItems={menuItems}\r\n      match={match}\r\n      switchRoutes={switchRoutes}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PerformerCabinet;\r\n","import CustomerCabinet from \"./CustomerCabinet\";\r\nimport PerformerCabinet from \"./PerformerCabinet\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProxyCabinet = ({ match }) => {\r\n  const { customer } = useSelector((state) => state.userReducer);\r\n  const { courier } = useSelector((state) => state.userReducer);\r\n\r\n  if (customer) {\r\n    return <CustomerCabinet match={match} />;\r\n  } else if (courier) {\r\n    return <PerformerCabinet match={match} />;\r\n  } else {\r\n    return <h1>Sorry, no role with that id</h1>;\r\n  }\r\n};\r\n\r\nexport default ProxyCabinet;\r\n","import { Row, Col, Card, Typography } from 'antd'\r\n\r\nconst { Text } = Typography;\r\n\r\nconst License = () => {\r\n    return <>\r\n        <Row className=\"registration-row\" justify={\"center\"}>\r\n            <h3 className=\"registration-logo\">Profielp</h3>\r\n            <Col className=\"registration-col\" col={24}>\r\n                <Card title=\"Agreement\" style={{ width: \"45rem\" }}>\r\n                    <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\r\n\r\n                    <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\r\n\r\n                    <Text type=\"danger\">THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</Text>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default License;","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { PrivateRoute } from \"./common/auth\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Registration from \"./pages/registration/Registration\";\r\nimport Main from \"./pages/map/Main\";\r\nimport ProxyCabinet from \"./pages/cabinet/ProxyCabinet\";\r\nimport \"./common/normilize.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport License from './pages/registration/components/license'\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/agreement\" component={License} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/registration\" component={Registration} />\r\n        <PrivateRoute path=\"/cabinet\" component={ProxyCabinet} />\r\n        <PrivateRoute path=\"/\" component={Main} />\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}